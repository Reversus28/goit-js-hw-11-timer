{"version":3,"sources":["js/time.js","index.js"],"names":["refs","btnStart","document","querySelector","btnStop","spanDays","spanHours","spanMinutes","spanSeconds","intervalId","CountdownTimer","targetDate","setAttribute","setInterval","currentDate","Date","now","startTimer","getTime","changeInterfaces","days","pad","Math","floor","hours","mins","secs","clearInterval","removeAttribute","value","String","padStart","timer","time","textContent","addEventListener","startTime","bind","stopTime"],"mappings":";;;AAkEA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAlEA,IAAMA,EAAO,CACXC,SAAUC,SAASC,cAAc,UACjCC,QAAUF,SAASC,cAAc,SACjCE,SAAUH,SAASC,cAAc,uBACjCG,UAAWJ,SAASC,cAAc,wBAClCI,YAAaL,SAASC,cAAc,uBACpCK,YAAaN,SAASC,cAAc,wBAIlCM,EAAa,KAEXC,EAAAA,WACwB,SAAA,EAAA,GAAdC,IAAAA,EAAAA,EAAAA,WAAc,EAAA,KAAA,GACrBA,KAAAA,WAAaA,EAoDtB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,YA/CE,MAAA,WAAY,IAAA,EAAA,KAEVX,EAAKC,SAASW,aAAa,WAAY,QAGtCH,EAAcI,YAAY,WACnBC,IAAAA,EAAcC,KAAKC,MACnBC,EAAc,EAAKN,WAAWO,UAAUJ,EAO9CK,EAAiB,CAAEC,KALN,EAAKC,IAAIC,KAAKC,MAAMN,EAAc,QAKtBO,MAJX,EAAKH,IAAIC,KAAKC,MAAON,EAAc,MAAyB,OAI1CQ,KAHnB,EAAKJ,IAAIC,KAAKC,MAAON,EAAc,KAAoB,MAG9BS,KAFzB,EAAKL,IAAIC,KAAKC,MAAON,EAAc,IAAc,SAI7D,OA+BP,CAAA,IAAA,WA3BE,MAAA,WACEU,cAAclB,GACbT,EAAKC,SAAS2B,gBAAgB,cAyBnC,CAAA,IAAA,MAtBI,MAAA,SAAIC,GACGC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,SAqBrC,EAtDMrB,GAsCAsB,EAAQ,IAAItB,EAAe,CAC/BC,WAAY,IAAII,KAAK,iBAQvB,SAASI,EAAiBc,GACxBjC,EAAKK,SAAS6B,YAAcD,EAAKb,KACjCpB,EAAKM,UAAU4B,YAAcD,EAAKT,MAClCxB,EAAKO,YAAY2B,YAAcD,EAAKR,KACpCzB,EAAKQ,YAAY0B,YAAcD,EAAKP,KATtC1B,EAAKC,SAASkC,iBAAiB,QAASH,EAAMI,UAAUC,KAAKL,IAE7DhC,EAAKI,QAAQ+B,iBAAiB,QAAQH,EAAMM,SAASD,KAAKL,IAU1DA,EAAMI;;AChEN,aAFA,QAAA,oBAEA,QAAA","file":"src.280100ec.js","sourceRoot":"../src","sourcesContent":["const refs = {\n  btnStart: document.querySelector('.start'),\n  btnStop : document.querySelector('.stop'),\n  spanDays: document.querySelector('[data-value=\"days\"]'),\n  spanHours: document.querySelector('[data-value=\"hours\"]'),\n  spanMinutes: document.querySelector('[data-value=\"mins\"]'),\n  spanSeconds: document.querySelector('[data-value=\"secs\"]'),\n   \n}\n\nlet intervalId = null\n \nclass CountdownTimer {\n  constructor({ targetDate }) {\n    this.targetDate = targetDate;\n  }\n\n\n\n  startTime() {\n\n    refs.btnStart.setAttribute('disabled', 'true')\n\n\n     intervalId =  setInterval(() => {\n      const currentDate = Date.now();\n      const startTimer =  this.targetDate.getTime()-currentDate;\n    \n      const days = this.pad(Math.floor(startTimer / (1000 * 60 * 60 * 24)));\n      const hours = this.pad(Math.floor((startTimer % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n      const mins = this.pad(Math.floor((startTimer % (1000 * 60 * 60)) / (1000 * 60)));\n      const secs = this.pad(Math.floor((startTimer % (1000 * 60)) / 1000));\n      \n      changeInterfaces({ days, hours, mins, secs });\n  \n    }, 1000);\n    \n  }\n\n  stopTime() {\n    clearInterval(intervalId);\n     refs.btnStart.removeAttribute('disabled')\n   }\n   \n    pad(value) {\n    return String(value).padStart(2, '0');\n  }\n\n};\n\nconst timer = new CountdownTimer({\n  targetDate: new Date('Nov 1, 2021'),\n});\n\nrefs.btnStart.addEventListener('click', timer.startTime.bind(timer)\n);\nrefs.btnStop.addEventListener('click',timer.stopTime.bind(timer));\n\n\nfunction changeInterfaces(time) {\n  refs.spanDays.textContent = time.days;\n  refs.spanHours.textContent = time.hours;\n  refs.spanMinutes.textContent = time.mins;\n  refs.spanSeconds.textContent = time.secs;\n};\n\ntimer.startTime();","import './sass/main.scss';\n\nimport './js/time'"]}